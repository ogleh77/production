 create table users
 (
     user_id    INTEGER PRIMARY KEY AUTOINCREMENT not null,
     first_name VARCHAR(50)                       not null,
     last_name  VARCHAR(50)                       not null,
     phone      INT                               not null
         unique,
     gender     VARCHAR(10)                       not null,
     shift      VARCHAR(50)                       not null,
     username   VARCHAR(50)                       not null
         unique,
     password   VARCHAR(50)                       not null,
     image      TEXT                              not null,
     role       Varchar(10)
 );

 INSERT INTO users(first_name, last_name, phone, gender, shift, username, password, image, role)
 VALUES ('Mohamed', 'Saeed', 4321567, 'Male', 'Afternoon', 'ogleh', 1234, 'empty', 'user');


 -- auto-generated definition
 create table customer
 (
     costumer_id INTEGER
         primary key autoincrement,
     first_name  VARCHAR(50) not null,
     last_name   VARCHAR(50) not null,
     phone       int         not null unique,
     gender      VARCHAR(10) not null,
     paid_by     VARCHAR(20) not null,
     paid        double      not null,
     discount    double      not null,
     shift       VARCHAR(20) not null,
     exp_date    VARCHAR(20) not null,
     weight      double      default 65,
     box_fk      INT         default 0
         constraint fk_box
             references box,
     poxing      boolean     default false,
     image       TEXT        not null,
     user_added  VARCHAR(20) not null,
     date_joined VARCHAR(20) default (strftime('%Y-%m-%d', 'now')) not null
 );

 DROP TABLE customer;


 create table box
 (
     box_id     INTEGER
         primary key autoincrement,
     box_title  VARCHAR(50) not null,
     box_cost   double  default 3.0,
     box_status boolean default true
 );

 -- auto-generated definition
 create table gym
 (
     gym_id       INT          not null
         primary key,
     gym_name     varchar(100) not null,
     fitness_cost double       not null,
     poxing_cost  double       not null,
     max_discount double       not null
 );


 create table daily_report
 (
     report_day         VARCHAR(50) default (strftime('%Y-%m-%d', 'now')) not null,
     registration       INT         default 0 not null,
     short_registration INT         default 0 not null,
     male               INT         default 0 not null,
     female             INT         default 0 not null,
     vip_box            INT         default 0 not null
 );

 -- DROP TABLE daily_report;

 create table monthly_report
 (
     report_month              VARCHAR(50) default (strftime('%Y-%m', 'now')) not null,
     total_registrations       INT         default 0 not null,
     total_short_registrations INT         default 0 not null,
     total_male                INT         default 0 not null,
     total_female              INT         default 0 not null,
     total_vip_box             INT         default 0 not null
 );
 -- DROP TABLE monthly_report;

 SELECT * FROM monthly_report;


 INSERT INTO daily_report(registration, short_registration, male, female, vip_box)
 VALUES (2, 3, 4, 5, 2),(2, 3, 4, 5, 2),(2, 3, 4, 5, 2);

 SELECT * FROM daily_report;

 INSERT INTO gym(gym_id, gym_name, fitness_cost, poxing_cost, max_discount)
 VALUES (1, 'Todheer fitness', 10.2, 3.0, 2);



 INSERT INTO box(box_title, box_cost, box_status)
 VALUES ('box 2', 3.2, true),
        ('box 1', 3.2, true),
        ('box 3', 3.2, true);



 INSERT INTO customer(first_name, last_name, phone, gender, paid_by, paid, discount, shift, exp_date, weight, box_fk,
                      poxing, image, user_added)
 VALUES ('Mohamed', 'Saeed', 4303923, 'Male', 'eDahab', 10.2, 1.0, 'Afternoon', '2022-10-19', 65, 1, true, 'empty',
         'ogleh'),
        ('Jamac', 'Ahmed', 4476619, 'Male', 'Zaad', 10.2, 1.0, 'Afternoon', '2022-08-19', 65, 1, true, 'empty', 'ogleh'),
        ('Iido', 'Suleman', 8484593, 'Female', 'eDahab', 10.2, 1.0, 'Afternoon', '2022-10-11', 65, 1, true, 'empty',
         'ogleh');



 UPDATE customer
 set box_fk=2
 WHERE costumer_id = 4;


 SELECT *
 FROM customer;




package com.example.production.models;

import com.example.production.entities.Users;
import com.example.production.repositories.Repo;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class UsersDAO extends Repo<Users> {

    @Override
    public void insert(Users users) {

    }

    @Override
    public void update(Users users) {

    }

    @Override
    public ObservableList<Users> getAll() throws SQLException {
        ObservableList<Users> users = FXCollections.observableArrayList();
        String query = "SELECT * FROM users";
        Users user = null;
        Connection connection = getConnection();

        Statement statement = connection.createStatement();

        ResultSet rs = statement.executeQuery(query);

        while (rs.next()) {
            user = new Users(rs.getInt(1), rs.getString(2), rs.getString(3),
                    rs.getInt(4), rs.getString(5), rs.getString(6),
                    rs.getString(7), rs.getString(8), rs.getString(9), rs.getString(10));
            users.add(user);
        }
        connection.close();
        statement.close();
        rs.close();
        return users;
    }
}




